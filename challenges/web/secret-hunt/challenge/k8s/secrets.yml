---
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: ctf-challenge
type: Opaque
data:
  # username: dbadmin (base64 encoded)
  username: ZGJhZG1pbg==
  # password: ghctf{k8s_path_traversal (base64 encoded) - FIRST PART OF FLAG
  password: Z2hjdGZ7azhzX3BhdGhfdHJhdmVyc2Fs
  # host: postgres.internal.local (base64 encoded)
  host: cG9zdGdyZXMuaW50ZXJuYWwubG9jYWw=

---
apiVersion: v1
kind: Secret
metadata:
  name: api-keys
  namespace: ctf-challenge
type: Opaque
data:
  # aws_access_key: AKIA1234567890EXAMPLE (base64 encoded)
  aws_access_key: QUtJQTEyMzQ1Njc4OTBFWEFNUEFL
  # aws_secret_key: just a dummy key, no flag here
  aws_secret_key: ZHVtbXktYXdzLXNlY3JldC1rZXktMTIzNDU2Nzg5MA==

---
apiVersion: v1
kind: Secret
metadata:
  name: admin-kubeconfig
  namespace: ctf-challenge
type: Opaque
data:
  # kubeconfig contains: _to_cluster_pwn} - SECOND PART OF FLAG
  kubeconfig: X3RvX2NsdXN0ZXJfcHdufQ==

---
apiVersion: v1
kind: Secret
metadata:
  name: tls-certificates
  namespace: default
  labels:
    environment: production
type: kubernetes.io/tls
data:
  # No flag here - just dummy cert data
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCmR1bW15IGNlcnRpZmljYXRlIGRhdGEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCmR1bW15IHByaXZhdGUga2V5IGRhdGEKLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo=
